/*
 * STOPCServerSimulator.java
 *
 * Created on __DATE__, __TIME__
 */

package stopcserver;

import java.lang.*;
import java.util.ArrayList;
import java.util.List;
import com.st.opcserver.dll.STOPCServer;
import com.st.opcserver.tags.STTags;

import javax.swing.JOptionPane;

/**
 *
 * @author  __USER__
 */
public class STOPCServerSimulator extends javax.swing.JFrame {

	STOPCServer sos = new STOPCServer();
	public static int TagList_count = 0;//用来始终指向新的taglist
	public static int tagList_select = 0;//用来指向现在被选中的taglist
	public static String servername = "null";//用来存储注册的服务器名字
	public static List<STTags> tags = new ArrayList<STTags>();//用来储存tag的各种属性
	
//	public static List<String> name = new ArrayList<String>();
//	public static List<Long> handle = new ArrayList<Long>();
//	public static List<String> description = new ArrayList<String>();
//	public static List<String> units = new ArrayList<String>();
//	public static List<String> value = new ArrayList<String>();
//	public static List<String> value_type = new ArrayList<String>();
//	public static List<Long> readAccesslevel = new ArrayList<Long>();
//	public static List<Long> writeAccessLevel = new ArrayList<Long>();
//	public static List<float[]> alarms = new ArrayList<float[]>();
//	public static List<long[]> severity = new ArrayList<long[]>();
//	public static List<int[]> enabled = new ArrayList<int[]>();
	

	/** Creates new form STOPCServerSimulator */
	public STOPCServerSimulator() {
		initComponents();
		this.setLocationRelativeTo(null);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jView = new javax.swing.JTextArea();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jButton5 = new javax.swing.JButton();
		jButton6 = new javax.swing.JButton();
		jButton7 = new javax.swing.JButton();
		jButton8 = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jView.setColumns(20);
		jView.setRows(5);
		jScrollPane1.setViewportView(jView);

		jButton1.setText("DLL\u7248\u672c");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("\u6ce8\u518c\u670d\u52a1\u5668");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jButton3.setText("\u521d\u59cb\u5316\u670d\u52a1\u5668");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jButton4.setText("\u6dfb\u52a0Tag");
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});

		jButton5.setText("\u4fee\u6539Tag");
		jButton5.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton5ActionPerformed(evt);
			}
		});

		jButton6.setText("\u8bfb\u53d6Tag");
		jButton6.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton6ActionPerformed(evt);
			}
		});

		jButton7.setText("\u5220\u9664Tag");
		jButton7.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton7ActionPerformed(evt);
			}
		});

		jButton8.setText("\u5378\u8f7d\u670d\u52a1\u5668");
		jButton8.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton8ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(41, 41, 41)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
								.addGroup(layout.createSequentialGroup().addGap(35, 35, 35)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(layout.createSequentialGroup().addComponent(jButton5)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE,
																91, javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(layout.createSequentialGroup().addComponent(jButton1)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(jButton2)))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(jButton3))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(jButton8))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(55, 55, 55)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jButton1).addComponent(jButton2).addComponent(jButton3)
								.addComponent(jButton4))
						.addGap(26, 26, 26)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jButton5).addComponent(jButton8).addComponent(jButton6)
								.addComponent(jButton7))
						.addContainerGap()));

		pack();
	}// </editor-fold>
		//GEN-END:initComponents

	private void formMouseClicked(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
	}

	private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if(servername.equals("null")){
			JOptionPane.showMessageDialog(null, "服务器未注册！\r\n无法卸载", "卸载服务器", JOptionPane.ERROR_MESSAGE);
		}else
			new STOPCServerUnregistry().setVisible(true);
	}

	private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
//		if (sos.STDeleteTag(handle))
//			jView.append("HANDLE = " + handle + "的Tag删除成功!!" + "\r\n");
//		else
//			jView.append("HANDLE = " + handle + "的Tag删除失败!!" + "\r\n");
	}

	private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		//jView.append("HANDLE = " + handle + "的Tag的值为" + sos.STReadTagString(handle) + "\r\n");
//		String[] Value = new String[2];
//		Value = sos.STReadTag(handle);
//		jView.append("数据类型为 = " + Value[1] + "数据的值为 = " + Value[0] + "\r\n");
	}

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		new STOPCServerAddTag().setVisible(true);
	}

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if (sos.initServer(200))
			jView.append("**服务器初始化成功**\r\n");
		else
			jView.append("**服务器初始化失败**\r\n");
	}

	private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if(TagList_count == 0){  //如果没有加过tag，则弹出提示框
			JOptionPane.showMessageDialog(null, "未添加过Tag，无法更新！", "Tag更新错误", JOptionPane.ERROR_MESSAGE); 
		}else 
			new STOPCServerUpdateTag().setVisible(true);
	}

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if(servername.equals("null")){
			new STOPCServerRegistryInit().setVisible(true);			
		}
		else JOptionPane.showMessageDialog(null, "服务器已经注册成功！\r\n无需多次注册", "注册服务器", JOptionPane.ERROR_MESSAGE);
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		String Dllver = sos.serverRevision();
		jView.append(Dllver + "\r\n");
	}

	/**
	* @param args the command line arguments
	*/
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new STOPCServerSimulator().setVisible(true);
			};
		});
	}
	
	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JButton jButton8;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextArea jView;
	// End of variables declaration//GEN-END:variables

}